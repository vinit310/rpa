Select fn.period ,fn.Openm, fn.Newm,fn.Resolvedm
from
(
SELECT 
  t1.Period as "period", t2.Prior_Period as "priorperiod",
  count(CASE(
    when t1.AccountID1 is not null 
    and t2.AccountID is null then 1 END
  )) AS "Openm", 
  count(CASE(
    when t1.AccountID1 is null 
    and t2.AccountID is not null then 1 END
  )) AS "Newm", 
  count(CASE(
    when t1.AccountID1 <> t2.AccountID then 1 END
  )) AS "Resolvedm" 
from 
  (
    SELECT 
      R_PeriodEO.PERIOD_NAME AS "Period", 
      ReconciliationEO.RECONCILIATION_ACCOUNT_ID AS "AccountID" 
    FROM 
      ARM_RECONCILIATIONS ReconciliationEO 
      LEFT OUTER JOIN ARM_PERIODS R_PeriodEO ON (
        ReconciliationEO.PERIOD_ID = R_PeriodEO.PERIOD_ID
      ) 
    WHERE 
      (ReconciliationEO.PERIOD_ID <> -2) 
      AND (
        (
          (
            (
              ReconciliationEO.PERIOD_ID = ~PERIOD~
            ) 
            AND (
              ABS(
                (
                  SELECT 
                    
                    /*+ ORDERED FIRST_ROWS(1) */
                    SUM(
                      CASE WHEN BalanceSummaryEO1.AMOUNT is not null 
                      OR (
                        BalanceSummaryEO2.AMOUNT is not null 
                        AND FormatEO.RECONCILIATION_METHOD IN ('B', 'D', 'T')
                      ) 
                      OR (
                        BalanceSummaryEO4.AMOUNT is not null 
                        AND FormatEO.RECONCILIATION_METHOD = 'V'
                      ) 
                      OR BalanceSummaryEO3.AMOUNT is not null 
                      OR BalanceSummaryEO5.AMOUNT is not null THEN ROUND(
                        coalesce(BalanceSummaryEO1.AMOUNT, 0) - CASE WHEN FormatEO.RECONCILIATION_METHOD IN ('B', 'D', 'T') THEN coalesce(BalanceSummaryEO2.AMOUNT, 0) ELSE 0 END - CASE WHEN (
                          FormatEO.RECONCILIATION_METHOD = 'V' 
                          AND ReconciliationEO2.VARIANCE_PERIOD_ID IS NOT NULL
                        ) THEN coalesce(BalanceSummaryEO4.AMOUNT, 0) ELSE 0 END - coalesce(BalanceSummaryEO3.AMOUNT, 0) - CASE WHEN FormatEO.RECONCILIATION_METHOD = 'C' THEN coalesce(BalanceSummaryEO5.AMOUNT, 0) ELSE 0 END, 
                        CurrenciesEO.DECIMAL_PLACES
                      ) ELSE null END * acr.RATE
                    ) 
                  FROM 
                    ARM_RECONCILIATIONS ReconciliationEO1 
                    INNER JOIN ARM_FORMATS FormatEO ON (
                      ReconciliationEO1.FORMAT_ID = FormatEO.FORMAT_ID
                    ) 
                    INNER JOIN FCM_CURRENCIES CurrenciesEO ON (
                      1 = 1 
                      AND CurrenciesEO.IN_USE_ARM = 'Y'
                    ) 
                    LEFT OUTER JOIN ARM_RECONCILIATIONS ReconciliationEO2 ON (
                      ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = ReconciliationEO2.RECONCILIATION_ACCOUNT_ID 
                      AND ReconciliationEO2.PERIOD_ID = ReconciliationEO1.PERIOD_ID
                    ) 
                    LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO1 ON (
                      ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO1.PROFILE_ID 
                      AND BalanceSummaryEO1.BUCKET_ID = 100003 
                      AND BalanceSummaryEO1.BALANCE_TYPE = 1 
                      AND BalanceSummaryEO1.CURRENCY = CurrenciesEO.CURRENCY 
                      AND BalanceSummaryEO1.PERIOD_ID = ReconciliationEO1.PERIOD_ID
                    ) 
                    LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO2 ON (
                      ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO2.PROFILE_ID 
                      AND BalanceSummaryEO2.BUCKET_ID = 100003 
                      AND BalanceSummaryEO2.BALANCE_TYPE = 2 
                      AND BalanceSummaryEO2.CURRENCY = CurrenciesEO.CURRENCY 
                      AND BalanceSummaryEO2.PERIOD_ID = ReconciliationEO1.PERIOD_ID
                    ) 
                    LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO4 ON (
                      ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO4.PROFILE_ID 
                      AND BalanceSummaryEO4.BUCKET_ID = 100003 
                      AND BalanceSummaryEO4.BALANCE_TYPE = 1 
                      AND BalanceSummaryEO4.CURRENCY = CurrenciesEO.CURRENCY 
                      AND BalanceSummaryEO4.PERIOD_ID = ReconciliationEO2.VARIANCE_PERIOD_ID
                    ) 
                    LEFT OUTER JOIN ARM_TRANSACTION_SUMMARIES BalanceSummaryEO3 ON (
                      ReconciliationEO2.RECONCILIATION_ID = BalanceSummaryEO3.RECONCILIATION_ID 
                      AND BalanceSummaryEO3.CURRENCY_BUCKET_ID = 100003 
                      AND BalanceSummaryEO3.CURRENCY = CurrenciesEO.CURRENCY 
                      AND BalanceSummaryEO3.TRANSACTION_TYPE = 'BEX'
                    ) 
                    LEFT OUTER JOIN (
                      SELECT 
                        SUM(AMOUNT) AMOUNT, 
                        PERIOD_ID, 
                        PROFILE_ID, 
                        CURRENCY 
                      FROM 
                        TM_BALANCE_SUMMARY 
                      WHERE 
                        BUCKET_ID = 100003 
                        AND BALANCE_TYPE IN (1, 2, 3) 
                      GROUP BY 
                        PERIOD_ID, 
                        PROFILE_ID, 
                        CURRENCY
                    ) BalanceSummaryEO5 ON (
                      ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO5.PROFILE_ID 
                      AND BalanceSummaryEO5.CURRENCY = CurrenciesEO.CURRENCY 
                      AND BalanceSummaryEO5.PERIOD_ID = ReconciliationEO1.PERIOD_ID
                    ) 
                    INNER JOIN (
                      SELECT 
                        FROM_CURRENCY, 
                        TO_CURRENCY, 
                        RATE, 
                        PERIOD_ID, 
                        RATE_TYPE_ID 
                      FROM 
                        ARM_CURRENCY_RATES 
                      UNION 
                      SELECT 
                        CURRENCY, 
                        CURRENCY, 
                        1, 
                        PERIOD_ID, 
                        RATE_TYPE_ID 
                      FROM 
                        FCM_CURRENCIES, 
                        ARM_PERIODS, 
                        ARM_RATE_TYPES
                    ) acr ON (
                      acr.FROM_CURRENCY = CurrenciesEO.CURRENCY 
                      AND UPPER(acr.TO_CURRENCY) = UPPER('GBP') 
                      AND acr.RATE_TYPE_ID = ReconciliationEO1.RATE_TYPE_ID 
                      AND acr.PERIOD_ID = ReconciliationEO1.PERIOD_ID
                    ) 
                  WHERE 
                    ReconciliationEO.RECONCILIATION_ID = ReconciliationEO1.RECONCILIATION_ID
                )
              ) > = 1
            )
          )
        )
      )
  ) t1 
  inner join (
    SELECT 
      R_PeriodEO1.PERIOD_NAME AS "Prior_Period", 
      ReconciliationEO1.RECONCILIATION_ACCOUNT_ID AS "AccountID1" 
    FROM 
      ARM_RECONCILIATIONS ReconciliationEO1 
      LEFT OUTER JOIN ARM_PERIODS R_PeriodEO1 ON (
        ReconciliationEO1.PERIOD_ID = R_PeriodEO1.PERIOD_ID
      ) 
    WHERE 
      (
        ReconciliationEO1.PERIOD_ID <> -2
      ) 
      AND (
        (
          (
            (
              ReconciliationEO1.PERIOD_ID = ~PERIOD~ - 2
            ) 
            AND (
              ABS(
                (
                  SELECT 
                    
                    /*+ ORDERED FIRST_ROWS(1) */
                    SUM(
                      CASE WHEN BalanceSummaryEO11.AMOUNT is not null 
                      OR (
                        BalanceSummaryEO12.AMOUNT is not null 
                        AND FormatEO1.RECONCILIATION_METHOD IN ('B', 'D', 'T')
                      ) 
                      OR (
                        BalanceSummaryEO14.AMOUNT is not null 
                        AND FormatEO1.RECONCILIATION_METHOD = 'V'
                      ) 
                      OR BalanceSummaryEO13.AMOUNT is not null 
                      OR BalanceSummaryEO15.AMOUNT is not null THEN ROUND(
                        coalesce(BalanceSummaryEO11.AMOUNT, 0) - CASE WHEN FormatEO1.RECONCILIATION_METHOD IN ('B', 'D', 'T') THEN coalesce(BalanceSummaryEO12.AMOUNT, 0) ELSE 0 END - CASE WHEN (
                          FormatEO1.RECONCILIATION_METHOD = 'V' 
                          AND ReconciliationEO12.VARIANCE_PERIOD_ID IS NOT NULL
                        ) THEN coalesce(BalanceSummaryEO14.AMOUNT, 0) ELSE 0 END - coalesce(BalanceSummaryEO13.AMOUNT, 0) - CASE WHEN FormatEO1.RECONCILIATION_METHOD = 'C' THEN coalesce(BalanceSummaryEO15.AMOUNT, 0) ELSE 0 END, 
                        CurrenciesEO1.DECIMAL_PLACES
                      ) ELSE null END * acr.RATE
                    ) 
                  FROM 
                    ARM_RECONCILIATIONS ReconciliationEO11 
                    INNER JOIN ARM_FORMATS FormatEO1 ON (
                      ReconciliationEO11.FORMAT_ID = FormatEO1.FORMAT_ID
                    ) 
                    INNER JOIN FCM_CURRENCIES CurrenciesEO1 ON (
                      1 = 1 
                      AND CurrenciesEO1.IN_USE_ARM = 'Y'
                    ) 
                    LEFT OUTER JOIN ARM_RECONCILIATIONS ReconciliationEO12 ON (
                      ReconciliationEO11.RECONCILIATION_ACCOUNT_ID = ReconciliationEO12.RECONCILIATION_ACCOUNT_ID 
                      AND ReconciliationEO12.PERIOD_ID = ReconciliationEO11.PERIOD_ID
                    ) 
                    LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO11 ON (
                      ReconciliationEO11.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO11.PROFILE_ID 
                      AND BalanceSummaryEO11.BUCKET_ID = 100003 
                      AND BalanceSummaryEO11.BALANCE_TYPE = 1 
                      AND BalanceSummaryEO11.CURRENCY = CurrenciesEO1.CURRENCY 
                      AND BalanceSummaryEO11.PERIOD_ID = ReconciliationEO11.PERIOD_ID
                    ) 
                    LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO12 ON (
                      ReconciliationEO11.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO12.PROFILE_ID 
                      AND BalanceSummaryEO12.BUCKET_ID = 100003 
                      AND BalanceSummaryEO12.BALANCE_TYPE = 2 
                      AND BalanceSummaryEO12.CURRENCY = CurrenciesEO1.CURRENCY 
                      AND BalanceSummaryEO12.PERIOD_ID = ReconciliationEO11.PERIOD_ID
                    ) 
                    LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO14 ON (
                      ReconciliationEO11.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO14.PROFILE_ID 
                      AND BalanceSummaryEO14.BUCKET_ID = 100003 
                      AND BalanceSummaryEO14.BALANCE_TYPE = 1 
                      AND BalanceSummaryEO14.CURRENCY = CurrenciesEO1.CURRENCY 
                      AND BalanceSummaryEO14.PERIOD_ID = ReconciliationEO12.VARIANCE_PERIOD_ID
                    ) 
                    LEFT OUTER JOIN ARM_TRANSACTION_SUMMARIES BalanceSummaryEO13 ON (
                      ReconciliationEO12.RECONCILIATION_ID = BalanceSummaryEO13.RECONCILIATION_ID 
                      AND BalanceSummaryEO13.CURRENCY_BUCKET_ID = 100003 
                      AND BalanceSummaryEO13.CURRENCY = CurrenciesEO1.CURRENCY 
                      AND BalanceSummaryEO13.TRANSACTION_TYPE = 'BEX'
                    ) 
                    LEFT OUTER JOIN (
                      SELECT 
                        SUM(AMOUNT) AMOUNT, 
                        PERIOD_ID, 
                        PROFILE_ID, 
                        CURRENCY 
                      FROM 
                        TM_BALANCE_SUMMARY 
                      WHERE 
                        BUCKET_ID = 100003 
                        AND BALANCE_TYPE IN (1, 2, 3) 
                      GROUP BY 
                        PERIOD_ID, 
                        PROFILE_ID, 
                        CURRENCY
                    ) BalanceSummaryEO15 ON (
                      ReconciliationEO11.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO15.PROFILE_ID 
                      AND BalanceSummaryEO15.CURRENCY = CurrenciesEO1.CURRENCY 
                      AND BalanceSummaryEO15.PERIOD_ID = ReconciliationEO11.PERIOD_ID
                    ) 
                    INNER JOIN (
                      SELECT 
                        FROM_CURRENCY, 
                        TO_CURRENCY, 
                        RATE, 
                        PERIOD_ID, 
                        RATE_TYPE_ID 
                      FROM 
                        ARM_CURRENCY_RATES 
                      UNION 
                      SELECT 
                        CURRENCY, 
                        CURRENCY, 
                        1, 
                        PERIOD_ID, 
                        RATE_TYPE_ID 
                      FROM 
                        FCM_CURRENCIES, 
                        ARM_PERIODS, 
                        ARM_RATE_TYPES
                    ) acr ON (
                      acr.FROM_CURRENCY = CurrenciesEO1.CURRENCY 
                      AND UPPER(acr.TO_CURRENCY) = UPPER('GBP') 
                      AND acr.RATE_TYPE_ID = ReconciliationEO11.RATE_TYPE_ID 
                      AND acr.PERIOD_ID = ReconciliationEO11.PERIOD_ID
                    ) 
                  WHERE 
                    ReconciliationEO1.RECONCILIATION_ID = ReconciliationEO11.RECONCILIATION_ID
                )
              ) > = 1
            )
          )
        )
      )
  ) t2 ON t1.ReconciliationEO.RECONCILIATION_ACCOUNT_ID = t2.ReconciliationEO1.RECONCILIATION_ACCOUNT_ID
) fn
ORDER BY 
      TO_DATE(
        '01-' || R_PeriodEO.PERIOD_NAME, 'DD-MON-YY'
