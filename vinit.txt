SELECT R_PeriodEO.PERIOD_NAME  AS "Period" ,
LAG(R_PeriodEO.PERIOD_NAME) OVER (order by R_PeriodEO.PERIOD_NAME) as "Prior_period",
 ReconciliationEO.RECONCILIATION_ACCOUNT_ID  AS "Account ID" ,
 (ABS((SELECT /*+ ORDERED FIRST_ROWS(1) */ SUM(CASE WHEN BalanceSummaryEO1.AMOUNT is not null OR (BalanceSummaryEO2.AMOUNT is not null AND FormatEO.RECONCILIATION_METHOD IN ('B','D','T')) OR (BalanceSummaryEO4.AMOUNT is not null AND FormatEO.RECONCILIATION_METHOD = 'V') OR BalanceSummaryEO3.AMOUNT is not null OR BalanceSummaryEO5.AMOUNT is not null THEN ROUND(coalesce(BalanceSummaryEO1.AMOUNT, 0) - CASE WHEN FormatEO.RECONCILIATION_METHOD IN ('B','D','T') THEN coalesce(BalanceSummaryEO2.AMOUNT, 0) ELSE 0 END - CASE WHEN (FormatEO.RECONCILIATION_METHOD = 'V' AND ReconciliationEO2.VARIANCE_PERIOD_ID IS NOT NULL) THEN coalesce(BalanceSummaryEO4.AMOUNT, 0) ELSE 0 END - coalesce(BalanceSummaryEO3.AMOUNT, 0) - CASE WHEN FormatEO.RECONCILIATION_METHOD = 'C' THEN coalesce(BalanceSummaryEO5.AMOUNT, 0) ELSE 0 END, CurrenciesEO.DECIMAL_PLACES) ELSE null END  * acr.RATE) FROM ARM_RECONCILIATIONS ReconciliationEO1 INNER JOIN ARM_FORMATS FormatEO ON (ReconciliationEO1.FORMAT_ID = FormatEO.FORMAT_ID) INNER JOIN FCM_CURRENCIES CurrenciesEO ON (1 = 1 AND CurrenciesEO.IN_USE_ARM = 'Y') LEFT OUTER JOIN ARM_RECONCILIATIONS ReconciliationEO2 ON (ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = ReconciliationEO2.RECONCILIATION_ACCOUNT_ID AND ReconciliationEO2.PERIOD_ID = ReconciliationEO1.PERIOD_ID) LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO1 ON (ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO1.PROFILE_ID AND BalanceSummaryEO1.BUCKET_ID = 100003 AND BalanceSummaryEO1.BALANCE_TYPE = 1 AND BalanceSummaryEO1.CURRENCY = CurrenciesEO.CURRENCY AND BalanceSummaryEO1.PERIOD_ID = ReconciliationEO1.PERIOD_ID) LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO2 ON (ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO2.PROFILE_ID AND BalanceSummaryEO2.BUCKET_ID = 100003 AND BalanceSummaryEO2.BALANCE_TYPE = 2 AND BalanceSummaryEO2.CURRENCY = CurrenciesEO.CURRENCY AND BalanceSummaryEO2.PERIOD_ID = ReconciliationEO1.PERIOD_ID) LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO4 ON (ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO4.PROFILE_ID AND BalanceSummaryEO4.BUCKET_ID = 100003 AND BalanceSummaryEO4.BALANCE_TYPE = 1 AND BalanceSummaryEO4.CURRENCY = CurrenciesEO.CURRENCY AND BalanceSummaryEO4.PERIOD_ID = ReconciliationEO2.VARIANCE_PERIOD_ID) LEFT OUTER JOIN ARM_TRANSACTION_SUMMARIES BalanceSummaryEO3 ON (ReconciliationEO2.RECONCILIATION_ID = BalanceSummaryEO3.RECONCILIATION_ID AND BalanceSummaryEO3.CURRENCY_BUCKET_ID = 100003 AND BalanceSummaryEO3.CURRENCY = CurrenciesEO.CURRENCY AND BalanceSummaryEO3.TRANSACTION_TYPE = 'BEX') LEFT OUTER JOIN (SELECT SUM(AMOUNT) AMOUNT, PERIOD_ID, PROFILE_ID, CURRENCY FROM TM_BALANCE_SUMMARY WHERE BUCKET_ID = 100003 AND BALANCE_TYPE IN (1,2,3) GROUP BY PERIOD_ID, PROFILE_ID, CURRENCY) BalanceSummaryEO5 ON (ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO5.PROFILE_ID AND BalanceSummaryEO5.CURRENCY = CurrenciesEO.CURRENCY AND BalanceSummaryEO5.PERIOD_ID = ReconciliationEO1.PERIOD_ID) INNER JOIN (SELECT FROM_CURRENCY, TO_CURRENCY, RATE, PERIOD_ID, RATE_TYPE_ID FROM ARM_CURRENCY_RATES UNION SELECT CURRENCY, CURRENCY, 1, PERIOD_ID, RATE_TYPE_ID FROM FCM_CURRENCIES, ARM_PERIODS, ARM_RATE_TYPES) acr ON (acr.FROM_CURRENCY = CurrenciesEO.CURRENCY AND UPPER(acr.TO_CURRENCY) = UPPER('GBP') AND acr.RATE_TYPE_ID = ReconciliationEO1.RATE_TYPE_ID AND acr.PERIOD_ID = ReconciliationEO1.PERIOD_ID) WHERE ReconciliationEO.RECONCILIATION_ID = ReconciliationEO1.RECONCILIATION_ID)))  AS "Absolute Difference" 
FROM ARM_RECONCILIATIONS ReconciliationEO 
LEFT OUTER JOIN ARM_PERIODS R_PeriodEO ON (ReconciliationEO.PERIOD_ID = R_PeriodEO.PERIOD_ID)
WHERE (ReconciliationEO.PERIOD_ID <> -2)
AND ((((ReconciliationEO.PERIOD_ID  =  ~PERIOD~ )
 AND (ABS((SELECT /*+ ORDERED FIRST_ROWS(1) */ SUM(CASE WHEN BalanceSummaryEO1.AMOUNT is not null OR (BalanceSummaryEO2.AMOUNT is not null AND FormatEO.RECONCILIATION_METHOD IN ('B','D','T')) OR (BalanceSummaryEO4.AMOUNT is not null AND FormatEO.RECONCILIATION_METHOD = 'V') OR BalanceSummaryEO3.AMOUNT is not null OR BalanceSummaryEO5.AMOUNT is not null THEN ROUND(coalesce(BalanceSummaryEO1.AMOUNT, 0) - CASE WHEN FormatEO.RECONCILIATION_METHOD IN ('B','D','T') THEN coalesce(BalanceSummaryEO2.AMOUNT, 0) ELSE 0 END - CASE WHEN (FormatEO.RECONCILIATION_METHOD = 'V' AND ReconciliationEO2.VARIANCE_PERIOD_ID IS NOT NULL) THEN coalesce(BalanceSummaryEO4.AMOUNT, 0) ELSE 0 END - coalesce(BalanceSummaryEO3.AMOUNT, 0) - CASE WHEN FormatEO.RECONCILIATION_METHOD = 'C' THEN coalesce(BalanceSummaryEO5.AMOUNT, 0) ELSE 0 END, CurrenciesEO.DECIMAL_PLACES) ELSE null END  * acr.RATE) FROM ARM_RECONCILIATIONS ReconciliationEO1 INNER JOIN ARM_FORMATS FormatEO ON (ReconciliationEO1.FORMAT_ID = FormatEO.FORMAT_ID) INNER JOIN FCM_CURRENCIES CurrenciesEO ON (1 = 1 AND CurrenciesEO.IN_USE_ARM = 'Y') LEFT OUTER JOIN ARM_RECONCILIATIONS ReconciliationEO2 ON (ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = ReconciliationEO2.RECONCILIATION_ACCOUNT_ID AND ReconciliationEO2.PERIOD_ID = ReconciliationEO1.PERIOD_ID) LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO1 ON (ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO1.PROFILE_ID AND BalanceSummaryEO1.BUCKET_ID = 100003 AND BalanceSummaryEO1.BALANCE_TYPE = 1 AND BalanceSummaryEO1.CURRENCY = CurrenciesEO.CURRENCY AND BalanceSummaryEO1.PERIOD_ID = ReconciliationEO1.PERIOD_ID) LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO2 ON (ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO2.PROFILE_ID AND BalanceSummaryEO2.BUCKET_ID = 100003 AND BalanceSummaryEO2.BALANCE_TYPE = 2 AND BalanceSummaryEO2.CURRENCY = CurrenciesEO.CURRENCY AND BalanceSummaryEO2.PERIOD_ID = ReconciliationEO1.PERIOD_ID) LEFT OUTER JOIN ARM_BALANCE_SUMMARIES BalanceSummaryEO4 ON (ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO4.PROFILE_ID AND BalanceSummaryEO4.BUCKET_ID = 100003 AND BalanceSummaryEO4.BALANCE_TYPE = 1 AND BalanceSummaryEO4.CURRENCY = CurrenciesEO.CURRENCY AND BalanceSummaryEO4.PERIOD_ID = ReconciliationEO2.VARIANCE_PERIOD_ID) LEFT OUTER JOIN ARM_TRANSACTION_SUMMARIES BalanceSummaryEO3 ON (ReconciliationEO2.RECONCILIATION_ID = BalanceSummaryEO3.RECONCILIATION_ID AND BalanceSummaryEO3.CURRENCY_BUCKET_ID = 100003 AND BalanceSummaryEO3.CURRENCY = CurrenciesEO.CURRENCY AND BalanceSummaryEO3.TRANSACTION_TYPE = 'BEX') LEFT OUTER JOIN (SELECT SUM(AMOUNT) AMOUNT, PERIOD_ID, PROFILE_ID, CURRENCY FROM TM_BALANCE_SUMMARY WHERE BUCKET_ID = 100003 AND BALANCE_TYPE IN (1,2,3) GROUP BY PERIOD_ID, PROFILE_ID, CURRENCY) BalanceSummaryEO5 ON (ReconciliationEO1.RECONCILIATION_ACCOUNT_ID = BalanceSummaryEO5.PROFILE_ID AND BalanceSummaryEO5.CURRENCY = CurrenciesEO.CURRENCY AND BalanceSummaryEO5.PERIOD_ID = ReconciliationEO1.PERIOD_ID) INNER JOIN (SELECT FROM_CURRENCY, TO_CURRENCY, RATE, PERIOD_ID, RATE_TYPE_ID FROM ARM_CURRENCY_RATES UNION SELECT CURRENCY, CURRENCY, 1, PERIOD_ID, RATE_TYPE_ID FROM FCM_CURRENCIES, ARM_PERIODS, ARM_RATE_TYPES) acr ON (acr.FROM_CURRENCY = CurrenciesEO.CURRENCY AND UPPER(acr.TO_CURRENCY) = UPPER('GBP') AND acr.RATE_TYPE_ID = ReconciliationEO1.RATE_TYPE_ID AND acr.PERIOD_ID = ReconciliationEO1.PERIOD_ID) WHERE ReconciliationEO.RECONCILIATION_ID = ReconciliationEO1.RECONCILIATION_ID)) > =  1 )))) 
